{"remainingRequest":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\views\\Register.vue","mtime":1596776063005},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport authService from '../services/AuthService';\r\n\r\nexport default {\r\n  name: 'register',\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: 'user',\r\n      },\r\n      registrationErrors: false,\r\n      registrationErrorMsg: 'There were problems registering this user.',\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      if (this.user.password != this.user.confirmPassword) {\r\n        this.registrationErrors = true;\r\n        this.registrationErrorMsg = 'Password & Confirm Password do not match.';\r\n      } else {\r\n        authService\r\n          .register(this.user)\r\n          .then((response) => {\r\n            if (response.status == 201) {\r\n              this.$router.push({\r\n                name: 'login',\r\n                query: { registration: 'success' },\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            const response = error.response;\r\n            this.registrationErrors = true;\r\n            if (response.status === 400) {\r\n              this.registrationErrorMsg = 'Bad Request: Validation Errors';\r\n            }\r\n          });\r\n      }\r\n    },\r\n    clearErrors() {\r\n      this.registrationErrors = false;\r\n      this.registrationErrorMsg = 'There were problems registering this user.';\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"register\" class=\"text-center\">\r\n    <form class=\"form-register\" @submit.prevent=\"register\">\r\n      <h1 class=\"h3 mb-3 font-weight-normal\">Create Account</h1>\r\n      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"registrationErrors\">\r\n        {{ registrationErrorMsg }}\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          class=\"form-control\"\r\n          placeholder=\"Username\"\r\n          v-model=\"user.username\"\r\n          required\r\n          autofocus />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Password\"\r\n          v-model=\"user.password\"\r\n          required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          class=\"form-control\"\r\n          placeholder=\"Confirm Password\"\r\n          v-model=\"user.confirmPassword\"\r\n          required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <router-link :to=\"{ name: 'login' }\">Have an account?</router-link>\r\n      </div>\r\n      <button class=\"btn btn-primary\" type=\"submit\">\r\n        Create Account\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/AuthService';\r\n\r\nexport default {\r\n  name: 'register',\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: 'user',\r\n      },\r\n      registrationErrors: false,\r\n      registrationErrorMsg: 'There were problems registering this user.',\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      if (this.user.password != this.user.confirmPassword) {\r\n        this.registrationErrors = true;\r\n        this.registrationErrorMsg = 'Password & Confirm Password do not match.';\r\n      } else {\r\n        authService\r\n          .register(this.user)\r\n          .then((response) => {\r\n            if (response.status == 201) {\r\n              this.$router.push({\r\n                name: 'login',\r\n                query: { registration: 'success' },\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            const response = error.response;\r\n            this.registrationErrors = true;\r\n            if (response.status === 400) {\r\n              this.registrationErrorMsg = 'Bad Request: Validation Errors';\r\n            }\r\n          });\r\n      }\r\n    },\r\n    clearErrors() {\r\n      this.registrationErrors = false;\r\n      this.registrationErrorMsg = 'There were problems registering this user.';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]}]}