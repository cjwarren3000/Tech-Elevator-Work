{"remainingRequest":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\components\\UploadFiles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\components\\UploadFiles.vue","mtime":1597330548078},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.string.ends-with\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport uploadService from \"../services/UploadService.js\"; // import router from '../router/index.js';\n\nexport default {\n  name: \"upload-files\",\n  data: function data() {\n    return {\n      selectedFileType: \"\",\n      selectedCSVFile: null\n    };\n  },\n  methods: {\n    csvFileToJSON: function csvFileToJSON(csvFile, callback) {\n      var reader = new FileReader();\n      reader.readAsText(csvFile);\n\n      reader.onload = function () {\n        console.log(reader.result);\n        var lines = reader.result.split(\"\\n\");\n        var resultObjects = [];\n        var headers = lines[0].split(\",\");\n\n        for (var i = 1; i < lines.length; i++) {\n          var currentObject = {};\n          var currentLine = lines[i].split(\",\");\n\n          for (var j = 0; j < headers.length; j++) {\n            var header = headers[j].trim();\n            currentObject[header] = currentLine[j].trim();\n          }\n\n          resultObjects.push(currentObject);\n        } // console.log(resultObjects);\n        // parsedCSV = resultObjects;\n        //console.log(JSON.stringify(resultObjects));\n\n\n        callback(resultObjects);\n      };\n    },\n    onFileChange: function onFileChange(e) {\n      console.log(e.target.files[0]);\n      this.selectedCSVFile = e.target.files[0];\n    },\n    uploadCSVFile: function uploadCSVFile() {\n      // let formData = new FormData();\n      var file = this.selectedCSVFile;\n      var type = this.selectedFileType;\n      var fileType = \".csv\";\n\n      if (!file.name.endsWith(fileType)) {\n        alert('Sorry, only .csv files are allowed.'); //$(\"#csvFileUploader\").val('');\n        //this.$refs.csvFileUploader.val('');\n        //this.input.value='';\n      } else if (type == \"\") {\n        alert('Please choose one of the file designation options.');\n      } else {\n        this.csvFileToJSON(file, function (result) {\n          var _this = this;\n\n          console.log(result);\n          uploadService.uploadFile(type, result).then(function (response) {\n            if (response.status == '201' || response.status == '200') {\n              console.log(\"successfully uploaded\");\n\n              if (_this.$router.name !== 'home') {\n                _this.$router.push({\n                  name: 'home'\n                });\n              }\n            }\n          }).catch(function (error) {\n            console.error(error);\n          });\n        });\n      } //this.$router.push({name: 'Home'});\n\n    }\n  }\n};",{"version":3,"sources":["UploadFiles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"upload-container-root\">\r\n        <h2>Upload a File</h2>\r\n        <form id=\"fileUploadForm\" v-on:submit.prevent=\"uploadCSVFile\">\r\n            <div id=\"fileTypeSelectors\">\r\n                <div class=\"radio-selector\">\r\n                    <input type=\"radio\" id=\"harvestTimes\" name=\"fileTypeSelector\" value=\"harvestTimes\" v-model=\"selectedFileType\">\r\n                    <label for =\"harvestTimes\">&nbsp; Harvest Times</label>\r\n                </div>\r\n                <div class=\"radio-selector\">\r\n                    <input type=\"radio\" id=\"transplantTimes\" name=\"fileTypeSelector\" value=\"transplantTimes\" v-model=\"selectedFileType\">\r\n                    <label for =\"transplantTimes\">&nbsp; Transplant Times</label>\r\n                </div>\r\n                <div class=\"radio-selector\">\r\n                    <input type=\"radio\" id=\"expirationTimes\" name=\"fileTypeSelector\" value=\"expirationTimes\" v-model=\"selectedFileType\">\r\n                    <label for =\"expirationTimes\">&nbsp; Expiration Times</label>\r\n                </div>\r\n                <div class=\"radio-selector\">\r\n                    <input type=\"radio\" id=\"cropPlans\" name=\"fileTypeSelector\" value=\"cropPlans\" v-model=\"selectedFileType\">\r\n                    <label for =\"cropPlans\">&nbsp; Crop Plans</label>\r\n                </div>\r\n            </div>\r\n            <label for =\"csvFileUploader\">Select a .csv file &nbsp;</label>\r\n            <input type=\"file\" id=\"csvFileUploader\" name=\"csvFileUploader\" v-on:change=\"onFileChange\">\r\n            <br><input type=\"submit\" class=\"uploadCSVButton\"/>\r\n        </form>\r\n        <section id=\"csvFileStructure\">\r\n            <h3>Structure of your .csv files</h3>\r\n            <h4>Harvest Times</h4>\r\n            <img src=\"../assets/images/HarvestTimesFormat.jpg\" />\r\n            <p></p>\r\n            <h4>Transplant Times</h4>\r\n            <img src=\"../assets/images/TransplantTimesFormat.jpg\" />\r\n            <p></p>\r\n            <h4>Expiration Times</h4>\r\n            <img src=\"../assets/images/ExpirationTimesFormat.jpg\" />\r\n            <p></p>\r\n            <h4>Crop Plans</h4>\r\n            <img src=\"../assets/images/CropPlansFormat.jpg\" />\r\n            <p></p>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport uploadService from '../services/UploadService.js';\r\n// import router from '../router/index.js';\r\n\r\nexport default {\r\n    name: \"upload-files\",\r\n    data() {\r\n        return {\r\n            selectedFileType: \"\",\r\n            selectedCSVFile: null,\r\n        };\r\n    },\r\n    methods: {\r\n        csvFileToJSON (csvFile, callback) {\r\n            let reader = new FileReader();\r\n            reader.readAsText(csvFile);\r\n            \r\n            reader.onload = function() {\r\n                console.log(reader.result);\r\n                let lines = reader.result.split(\"\\n\");\r\n                let resultObjects = [];\r\n                let headers = lines[0].split(\",\");\r\n                for (let i=1; i<lines.length; i++) {\r\n                    let currentObject = {};\r\n                    let currentLine = lines[i].split(\",\");\r\n                    for (let j=0; j<headers.length; j++) {\r\n                        let header = headers[j].trim()\r\n                        currentObject[header] = currentLine[j].trim()\r\n                    }\r\n                    resultObjects.push(currentObject);\r\n                }\r\n                // console.log(resultObjects);\r\n                // parsedCSV = resultObjects;\r\n                \r\n                //console.log(JSON.stringify(resultObjects));\r\n                callback(resultObjects)\r\n            };\r\n        },\r\n        onFileChange(e) {\r\n            console.log(e.target.files[0])\r\n            this.selectedCSVFile = e.target.files[0];\r\n        },\r\n        uploadCSVFile() {\r\n            // let formData = new FormData();\r\n            let file = this.selectedCSVFile;\r\n            let type = this.selectedFileType;\r\n            const fileType = \".csv\";\r\n\r\n            if (!file.name.endsWith(fileType)) {\r\n                alert('Sorry, only .csv files are allowed.');\r\n                //$(\"#csvFileUploader\").val('');\r\n                //this.$refs.csvFileUploader.val('');\r\n                //this.input.value='';\r\n            }\r\n            else if (type == \"\") {\r\n                alert('Please choose one of the file designation options.');\r\n            }\r\n            else {\r\n                this.csvFileToJSON(file, function(result) {\r\n                    console.log(result)\r\n                    uploadService.uploadFile(type, result)\r\n                    .then(response => {\r\n                        if (response.status == '201' || response.status == '200') {\r\n                            console.log(\"successfully uploaded\");\r\n                            if (this.$router.name !== 'home') {\r\n                                this.$router.push({name: 'home'});\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                    })\r\n                })\r\n            }\r\n            //this.$router.push({name: 'Home'});\r\n        },\r\n        \r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh3{\r\n    text-decoration: underline;\r\n    padding-top: 10px;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}