{"remainingRequest":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\views\\Register.vue","mtime":1596776063005},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport authService from \"../services/AuthService\";\nexport default {\n  name: 'register',\n  data: function data() {\n    return {\n      user: {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        role: 'user'\n      },\n      registrationErrors: false,\n      registrationErrorMsg: 'There were problems registering this user.'\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n\n      if (this.user.password != this.user.confirmPassword) {\n        this.registrationErrors = true;\n        this.registrationErrorMsg = 'Password & Confirm Password do not match.';\n      } else {\n        authService.register(this.user).then(function (response) {\n          if (response.status == 201) {\n            _this.$router.push({\n              name: 'login',\n              query: {\n                registration: 'success'\n              }\n            });\n          }\n        }).catch(function (error) {\n          var response = error.response;\n          _this.registrationErrors = true;\n\n          if (response.status === 400) {\n            _this.registrationErrorMsg = 'Bad Request: Validation Errors';\n          }\n        });\n      }\n    },\n    clearErrors: function clearErrors() {\n      this.registrationErrors = false;\n      this.registrationErrorMsg = 'There were problems registering this user.';\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,eAAA,EAAA,EAHA;AAIA,QAAA,IAAA,EAAA;AAJA,OADA;AAOA,MAAA,kBAAA,EAAA,KAPA;AAQA,MAAA,oBAAA,EAAA;AARA,KAAA;AAUA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,IAAA,KAAA,IAAA,CAAA,eAAA,EAAA;AACA,aAAA,kBAAA,GAAA,IAAA;AACA,aAAA,oBAAA,GAAA,2CAAA;AACA,OAHA,MAGA;AACA,QAAA,WAAA,CACA,QADA,CACA,KAAA,IADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,cAAA,IAAA,EAAA,OADA;AAEA,cAAA,KAAA,EAAA;AAAA,gBAAA,YAAA,EAAA;AAAA;AAFA,aAAA;AAIA;AACA,SATA,EAUA,KAVA,CAUA,UAAA,KAAA,EAAA;AACA,cAAA,QAAA,GAAA,KAAA,CAAA,QAAA;AACA,UAAA,KAAA,CAAA,kBAAA,GAAA,IAAA;;AACA,cAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,oBAAA,GAAA,gCAAA;AACA;AACA,SAhBA;AAiBA;AACA,KAxBA;AAyBA,IAAA,WAzBA,yBAyBA;AACA,WAAA,kBAAA,GAAA,KAAA;AACA,WAAA,oBAAA,GAAA,4CAAA;AACA;AA5BA;AAdA,CAAA","sourcesContent":["<template>\r\n  <div id=\"register\" class=\"text-center\">\r\n    <form class=\"form-register\" @submit.prevent=\"register\">\r\n      <h1 class=\"h3 mb-3 font-weight-normal\">Create Account</h1>\r\n      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"registrationErrors\">\r\n        {{ registrationErrorMsg }}\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          class=\"form-control\"\r\n          placeholder=\"Username\"\r\n          v-model=\"user.username\"\r\n          required\r\n          autofocus />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Password\"\r\n          v-model=\"user.password\"\r\n          required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          class=\"form-control\"\r\n          placeholder=\"Confirm Password\"\r\n          v-model=\"user.confirmPassword\"\r\n          required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <router-link :to=\"{ name: 'login' }\">Have an account?</router-link>\r\n      </div>\r\n      <button class=\"btn btn-primary\" type=\"submit\">\r\n        Create Account\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authService from '../services/AuthService';\r\n\r\nexport default {\r\n  name: 'register',\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        role: 'user',\r\n      },\r\n      registrationErrors: false,\r\n      registrationErrorMsg: 'There were problems registering this user.',\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      if (this.user.password != this.user.confirmPassword) {\r\n        this.registrationErrors = true;\r\n        this.registrationErrorMsg = 'Password & Confirm Password do not match.';\r\n      } else {\r\n        authService\r\n          .register(this.user)\r\n          .then((response) => {\r\n            if (response.status == 201) {\r\n              this.$router.push({\r\n                name: 'login',\r\n                query: { registration: 'success' },\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            const response = error.response;\r\n            this.registrationErrors = true;\r\n            if (response.status === 400) {\r\n              this.registrationErrorMsg = 'Bad Request: Validation Errors';\r\n            }\r\n          });\r\n      }\r\n    },\r\n    clearErrors() {\r\n      this.registrationErrors = false;\r\n      this.registrationErrorMsg = 'There were problems registering this user.';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"sourceRoot":"src/views"}]}