{"remainingRequest":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\router\\index.js","dependencies":[{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\router\\index.js","mtime":1597328987970},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport Vue from \"vue\";\nimport Router from \"vue-router\";\nimport AllDetails from \"../views/AllDetails.vue\";\nimport Home from \"../views/Home.vue\";\nimport Login from \"../views/Login.vue\";\nimport Logout from \"../views/Logout.vue\";\nimport Register from \"../views/Register.vue\";\nimport UploadFiles from \"../views/UploadFileView.vue\";\nimport store from \"../store/index\";\nimport EditCropDetails from \"../views/EditCropDetails.vue\";\nimport AllFarmInfo from \"../views/AllFarmInfo.vue\";\nimport AddFarmInfo from \"../views/AddFarmInfo.vue\";\nimport EditCropPlans from \"../views/EditCropPlans.vue\";\nimport Crops from \"../views/Crops.vue\";\nimport AddHarvest from \"../views/AddHarvest.vue\";\nimport AddLoss from \"../views/AddLoss.vue\";\nimport AddSale from \"../views/AddSale.vue\";\nimport AddWaste from \"../views/AddWaste.vue\";\nimport CurrentInventory from \"../views/CurrentInventory.vue\";\nVue.use(Router);\n/**\r\n * The Vue Router is used to \"direct\" the browser to render a specific view component\r\n * inside of App.vue depending on the URL.\r\n *\r\n * It also is used to detect whether or not a route requires the user to have first authenticated.\r\n * If the user has not yet authenticated (and needs to) they are redirected to /login\r\n * If they have (or don't need to) they're allowed to go about their way.\r\n */\n\nvar router = new Router({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes: [{\n    path: \"/\",\n    name: \"home\",\n    component: Home,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/crops\",\n    name: \"crops\",\n    component: Crops,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/inventory\",\n    name: \"inventory\",\n    component: CurrentInventory,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/login\",\n    name: \"login\",\n    component: Login,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/logout\",\n    name: \"logout\",\n    component: Logout,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/register\",\n    name: \"register\",\n    component: Register,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/upload\",\n    name: \"uploadFiles\",\n    component: UploadFiles,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/AllDetails\",\n    name: \"AllDetails\",\n    component: AllDetails,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/EditCrop\",\n    name: \"EditCrop\",\n    component: EditCropDetails,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/AllFarmInfo\",\n    name: \"AllFarmInfo\",\n    component: AllFarmInfo,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/add/FarmInfo\",\n    name: \"AddFarmInfo\",\n    component: AddFarmInfo,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/add/Harvest\",\n    name: \"AddHarvest\",\n    component: AddHarvest,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/add/Loss\",\n    name: \"AddLoss\",\n    component: AddLoss,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/add/Sale\",\n    name: \"AddSale\",\n    component: AddSale,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/add/Waste\",\n    name: \"AddWaste\",\n    component: AddWaste,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/edit/CropPlans\",\n    name: \"EditCropPlans\",\n    component: EditCropPlans,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"*\",\n    redirect: \"/\"\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  // Determine if the route requires Authentication\n  var requiresAuth = to.matched.some(function (x) {\n    return x.meta.requiresAuth;\n  }); // If it does and they are not logged in, send the user to \"/login\"\n\n  if (requiresAuth && store.state.token === \"\") {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["C:/Users/Student/team-oscar-final-capstone/vue/src/router/index.js"],"names":["Vue","Router","AllDetails","Home","Login","Logout","Register","UploadFiles","store","EditCropDetails","AllFarmInfo","AddFarmInfo","EditCropPlans","Crops","AddHarvest","AddLoss","AddSale","AddWaste","CurrentInventory","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","redirect","beforeEach","to","from","next","matched","some","x","state","token"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Router from \"vue-router\";\r\nimport AllDetails from \"../views/AllDetails.vue\"\r\nimport Home from \"../views/Home.vue\";\r\nimport Login from \"../views/Login.vue\";\r\nimport Logout from \"../views/Logout.vue\";\r\nimport Register from \"../views/Register.vue\";\r\nimport UploadFiles from \"../views/UploadFileView.vue\";\r\nimport store from \"../store/index\";\r\nimport EditCropDetails from \"../views/EditCropDetails.vue\";\r\nimport AllFarmInfo from \"../views/AllFarmInfo.vue\";\r\nimport AddFarmInfo from \"../views/AddFarmInfo.vue\";\r\nimport EditCropPlans from \"../views/EditCropPlans.vue\";\r\nimport Crops from \"../views/Crops.vue\";\r\nimport AddHarvest from \"../views/AddHarvest.vue\";\r\nimport AddLoss from \"../views/AddLoss.vue\";\r\nimport AddSale from \"../views/AddSale.vue\";\r\nimport AddWaste from \"../views/AddWaste.vue\";\r\nimport CurrentInventory from \"../views/CurrentInventory.vue\";\r\n\r\nVue.use(Router);\r\n\r\n/**\r\n * The Vue Router is used to \"direct\" the browser to render a specific view component\r\n * inside of App.vue depending on the URL.\r\n *\r\n * It also is used to detect whether or not a route requires the user to have first authenticated.\r\n * If the user has not yet authenticated (and needs to) they are redirected to /login\r\n * If they have (or don't need to) they're allowed to go about their way.\r\n */\r\n\r\nconst router = new Router({\r\n  mode: \"history\",\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: \"/\",\r\n      name: \"home\",\r\n      component: Home,\r\n      meta: {\r\n        requiresAuth: true,\r\n      },\r\n    },\r\n    {\r\n      path: \"/crops\",\r\n      name: \"crops\",\r\n      component: Crops,\r\n      meta: {\r\n        requiresAuth: true,\r\n      },\r\n    },\r\n    {\r\n      path: \"/inventory\",\r\n      name: \"inventory\",\r\n      component: CurrentInventory,\r\n      meta: {\r\n        requiresAuth: true,\r\n      },\r\n    },\r\n    {\r\n      path: \"/login\",\r\n      name: \"login\",\r\n      component: Login,\r\n      meta: {\r\n        requiresAuth: false,\r\n      },\r\n    },\r\n    {\r\n      path: \"/logout\",\r\n      name: \"logout\",\r\n      component: Logout,\r\n      meta: {\r\n        requiresAuth: false,\r\n      },\r\n    },\r\n    {\r\n      path: \"/register\",\r\n      name: \"register\",\r\n      component: Register,\r\n      meta: {\r\n        requiresAuth: false,\r\n      },\r\n    },\r\n    {\r\n      path: \"/upload\",\r\n      name: \"uploadFiles\",\r\n      component: UploadFiles,\r\n      meta: {\r\n        requiresAuth: true,\r\n      },\r\n    },\r\n    {\r\n      path: \"/AllDetails\",\r\n      name: \"AllDetails\",\r\n      component: AllDetails,\r\n      meta: {\r\n        requiresAuth: true,\r\n      }\r\n    },\r\n    {\r\n      path: \"/EditCrop\",\r\n      name: \"EditCrop\",\r\n      component: EditCropDetails,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: \"/AllFarmInfo\",\r\n      name: \"AllFarmInfo\",\r\n      component: AllFarmInfo,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: \"/add/FarmInfo\",\r\n      name: \"AddFarmInfo\",\r\n      component: AddFarmInfo,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: \"/add/Harvest\",\r\n      name: \"AddHarvest\",\r\n      component: AddHarvest,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: \"/add/Loss\",\r\n      name: \"AddLoss\",\r\n      component: AddLoss,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: \"/add/Sale\",\r\n      name: \"AddSale\",\r\n      component: AddSale,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: \"/add/Waste\",\r\n      name: \"AddWaste\",\r\n      component: AddWaste,\r\n      meta:{\r\n        requiresAuth: true\r\n      },\r\n    },\r\n    {\r\n      path: \"/edit/CropPlans\",\r\n      name: \"EditCropPlans\",\r\n      component: EditCropPlans,\r\n      meta: {\r\n        requiresAuth: true\r\n      }\r\n    },\r\n    {\r\n      path: \"*\",\r\n      redirect: \"/\",\r\n    },\r\n  ],\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // Determine if the route requires Authentication\r\n  const requiresAuth = to.matched.some((x) => x.meta.requiresAuth);\r\n\r\n  // If it does and they are not logged in, send the user to \"/login\"\r\n  if (requiresAuth && store.state.token === \"\") {\r\n    next(\"/login\");\r\n  } else {\r\n    // Else let them go to their next destination\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"]}]}