{"remainingRequest":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\src\\store\\index.js","mtime":1597258770253},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Student\\team-oscar-final-capstone\\vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\n/*\r\n * The authorization header is set for axios when you login but what happens when you come back or\r\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\r\n * exists you should set the header so that it will be attached to each request\r\n */\n\nvar currentToken = localStorage.getItem('token');\nvar currentUser = null;\n\nif (localStorage.getItem('user') && localStorage.getItem('user') != 'undefined') {\n  currentUser = JSON.parse(localStorage.getItem('user'));\n}\n\nif (currentToken && currentToken != 'undefined') {\n  axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(currentToken);\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: currentToken || '',\n    user: currentUser || {},\n    // If a user is an admin, their user.role will be 'admin'\n    crop: [{\n      cropId: 1,\n      cropName: \"corn\",\n      timeSeedToHarvest: 80,\n      timeSeedToTransplant: 10,\n      timeToExpiration: 70,\n      timeTransplantToHarvest: 60\n    }, {\n      cropId: 2,\n      cropName: \"wheat\",\n      timeSeedToHarvest: 110,\n      timeSeedToTransplant: 14,\n      timeToExpiration: 90,\n      timeTransplantToHarvest: 96\n    }, {\n      cropId: 3,\n      cropName: \"summer squash\",\n      timeSeedToHarvest: 65,\n      timeSeedToTransplant: 21,\n      timeToExpiration: 30,\n      timeTransplantToHarvest: 44\n    }],\n    cropPlans: [{\n      planId: 5,\n      area_identifier: \"raised bed 1\",\n      cropName: \"garlic\",\n      cropId: 9,\n      planting_date: \"05/02/2020\"\n    }],\n    harvests: [{\n      area: \"raised bed 1\",\n      cropId: 9,\n      inventoryId: 1,\n      cropName: \"corn\",\n      dateHarvested: \"08/10/2020\",\n      harvestId: 1,\n      weight: 50\n    }],\n    sales: [{\n      saleId: 1,\n      inventoryId: 1,\n      dateSold: \"08/12/2020\",\n      amountSold: 500,\n      revenue: 385.50,\n      methodOfSale: \"wholesale\"\n    }],\n    losses: [{\n      lossId: 1,\n      inventoryId: 2,\n      dateLost: \"07/20/2020\",\n      amountLost: 100,\n      lossDescription: \"Sheep got into the silo and ate grain.\"\n    }],\n    wastes: [{\n      wasteId: 1,\n      inventoryId: 3,\n      dateWasted: \"07/15/2020\",\n      amountWasted: 25,\n      wasteDescription: \"Tomatoes expired.\"\n    }],\n    inventory: [{\n      inventoryId: 1,\n      cropId: 1,\n      cropName: \"corn\",\n      amount: 50,\n      dateAdded: \"08/11/2020\"\n    }]\n  },\n  mutations: {\n    SET_AUTH_TOKEN: function SET_AUTH_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    LOGOUT: function LOGOUT(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.token = '';\n      state.user = {};\n      axios.defaults.headers.common = {};\n    },\n    POPULATE_CROP_DATA: function POPULATE_CROP_DATA(state, data) {\n      state.crop = data;\n    },\n    POPULATE_CROP_PLANS: function POPULATE_CROP_PLANS(state, data) {\n      state.cropPlans = data;\n    },\n    POPULATE_HARVEST_DATA: function POPULATE_HARVEST_DATA(state, data) {\n      state.harvests = data;\n    },\n    POPULATE_SALE_DATA: function POPULATE_SALE_DATA(state, data) {\n      state.sales = data;\n    },\n    POPULATE_LOSS_DATA: function POPULATE_LOSS_DATA(state, data) {\n      state.losses = data;\n    },\n    POPULATE_WASTE_DATA: function POPULATE_WASTE_DATA(state, data) {\n      state.wastes = data;\n    },\n    POPULATE_INVENTORY: function POPULATE_INVENTORY(state, data) {\n      state.inventory = data;\n    }\n  }\n});",{"version":3,"sources":["C:/Users/Student/team-oscar-final-capstone/vue/src/store/index.js"],"names":["Vue","Vuex","axios","use","currentToken","localStorage","getItem","currentUser","JSON","parse","defaults","headers","common","Store","state","token","user","crop","cropId","cropName","timeSeedToHarvest","timeSeedToTransplant","timeToExpiration","timeTransplantToHarvest","cropPlans","planId","area_identifier","planting_date","harvests","area","inventoryId","dateHarvested","harvestId","weight","sales","saleId","dateSold","amountSold","revenue","methodOfSale","losses","lossId","dateLost","amountLost","lossDescription","wastes","wasteId","dateWasted","amountWasted","wasteDescription","inventory","amount","dateAdded","mutations","SET_AUTH_TOKEN","setItem","SET_USER","stringify","LOGOUT","removeItem","POPULATE_CROP_DATA","data","POPULATE_CROP_PLANS","POPULATE_HARVEST_DATA","POPULATE_SALE_DATA","POPULATE_LOSS_DATA","POPULATE_WASTE_DATA","POPULATE_INVENTORY"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\n\r\nVue.use(Vuex)\r\n\r\n/*\r\n * The authorization header is set for axios when you login but what happens when you come back or\r\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\r\n * exists you should set the header so that it will be attached to each request\r\n */\r\nconst currentToken = localStorage.getItem('token')\r\n\r\nlet currentUser = null;\r\nif ((localStorage.getItem('user') && localStorage.getItem('user') != 'undefined')) {\r\n  currentUser = JSON.parse(localStorage.getItem('user'));\r\n}\r\n \r\nif(currentToken && currentToken != 'undefined') {\r\n  axios.defaults.headers.common['Authorization'] = `Bearer ${currentToken}`;\r\n}\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    token: currentToken || '',\r\n    user: currentUser || {}, // If a user is an admin, their user.role will be 'admin'\r\n    crop: [{\r\n        cropId: 1,\r\n        cropName: \"corn\",\r\n        timeSeedToHarvest: 80,\r\n        timeSeedToTransplant: 10,\r\n        timeToExpiration: 70,\r\n        timeTransplantToHarvest: 60,\r\n      },\r\n      {\r\n        cropId: 2,\r\n        cropName: \"wheat\",\r\n        timeSeedToHarvest: 110,\r\n        timeSeedToTransplant: 14,\r\n        timeToExpiration: 90,\r\n        timeTransplantToHarvest: 96,\r\n      },\r\n      {\r\n        cropId: 3,\r\n        cropName: \"summer squash\",\r\n        timeSeedToHarvest: 65,\r\n        timeSeedToTransplant: 21,\r\n        timeToExpiration: 30,\r\n        timeTransplantToHarvest: 44,\r\n      }\r\n    ],\r\n    cropPlans: [\r\n      {\r\n        planId: 5,\r\n        area_identifier: \"raised bed 1\",\r\n        cropName: \"garlic\",\r\n        cropId: 9,\r\n        planting_date: \"05/02/2020\",\r\n      }\r\n    ],\r\n    harvests: [\r\n      {\r\n        area: \"raised bed 1\",\r\n        cropId: 9,\r\n        inventoryId: 1,\r\n        cropName: \"corn\",\r\n        dateHarvested: \"08/10/2020\",\r\n        harvestId: 1,\r\n        weight: 50,\r\n      },\r\n    ],\r\n    sales: [\r\n      {\r\n        saleId: 1,\r\n        inventoryId: 1  ,\r\n        dateSold: \"08/12/2020\",\r\n        amountSold: 500,\r\n        revenue: 385.50,\r\n        methodOfSale: \"wholesale\",\r\n      },\r\n    ],\r\n    losses: [\r\n      {\r\n        lossId: 1,\r\n        inventoryId: 2,\r\n        dateLost: \"07/20/2020\",\r\n        amountLost: 100,\r\n        lossDescription: \"Sheep got into the silo and ate grain.\",\r\n      },\r\n    ],\r\n    wastes: [\r\n      {\r\n        wasteId: 1,\r\n        inventoryId: 3,\r\n        dateWasted: \"07/15/2020\",\r\n        amountWasted: 25,\r\n        wasteDescription: \"Tomatoes expired.\",\r\n      },\r\n    ],\r\n    inventory: [\r\n      {\r\n        inventoryId: 1,\r\n        cropId: 1,\r\n        cropName: \"corn\",\r\n        amount: 50,\r\n        dateAdded: \"08/11/2020\",\r\n      },\r\n    ],\r\n  },\r\n  mutations: {\r\n    SET_AUTH_TOKEN(state, token) {\r\n      state.token = token;\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n    },\r\n    SET_USER(state, user) {\r\n      state.user = user;\r\n      localStorage.setItem('user',JSON.stringify(user));\r\n    },\r\n    LOGOUT(state) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      state.token = '';\r\n      state.user = {};\r\n      axios.defaults.headers.common = {};\r\n    },\r\n    POPULATE_CROP_DATA(state, data) {\r\n      state.crop = data;\r\n    },\r\n    POPULATE_CROP_PLANS(state, data) {\r\n      state.cropPlans = data;\r\n    },\r\n    POPULATE_HARVEST_DATA(state, data) {\r\n      state.harvests = data;\r\n    },\r\n    POPULATE_SALE_DATA(state, data) {\r\n      state.sales = data;\r\n    },\r\n    POPULATE_LOSS_DATA(state, data) {\r\n      state.losses = data;\r\n    },\r\n    POPULATE_WASTE_DATA(state, data) {\r\n      state.wastes = data;\r\n    },\r\n    POPULATE_INVENTORY(state, data) {\r\n      state.inventory = data;\r\n    },\r\n  }\r\n})\r\n"]}]}